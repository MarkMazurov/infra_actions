# This is a basic workflow to help you get started with Actions

name: Django-app Workflow

# Controls when the workflow will run
on: [push]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  tests:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Запуск actions checkout - готового скрипта для клонирования репозитория
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7

      - name: Install dependencies
        run: |
          # обновление pip
          python -m pip install --upgrade pip
          # установка flake8 и его плагинов
          pip install flake8 pep8-naming flake8-broken-line flake8-return flake8-isort
          # установка зависимостей
          pip install -r requirements.txt

      - name: Test with flake8 and django tests
        run: |
          # запуск проверки проекта по flake8
          python -m flake8
          cd infra_project/
          python manage.py test

  build_and_push_to_docker_hub:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Docker
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to Docker Hub
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: mark51/infra_project

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub
    steps:
      - name: executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          script: |
            # Выполняет pull образа с DockerHub
            sudo docker pull mark51/infra_project
            # Остановка всех контейнеров
            sudo docker stop $(sudo docker ps -a -q)
            # Запускаем свежий контейнер
            sudo docker run --rm -d -p 8000:8000 mark51/infra_project
